@inject NavigationManager Nav
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Workout</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (!loggedIn)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Bejelentkezés
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="registration">
                    <span class="oi oi-people" aria-hidden="true"></span> Regisztráció
                </NavLink>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login" @onclick="LogOut">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Kijelentkezés
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool loggedIn;
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnInitializedAsync()
    {
        loggedIn = await sessionStorage.GetItemAsync<bool>("success");
    }
    private async void LogOut()
    {
        await sessionStorage.RemoveItemAsync("success");
        await sessionStorage.RemoveItemAsync("username");
        await sessionStorage.RemoveItemAsync("id");

    }
}
